<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LIC Jeevan Anand</title>
    <!-- Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Poppins Font for a consistent look -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700;800&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }
        .soft-shadow {
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
    </style>
</head>
<body class="bg-gray-100">
    <div id="main-container"
        class="relative flex flex-col items-center min-h-screen w-full text-ink font-sans p-4 overflow-x-hidden"
        style="background-image: linear-gradient(to bottom right, #004D99, #001A33);">
        <div id="app-container"
            class="relative w-full max-w-lg p-6 rounded-3xl soft-shadow my-auto"
            style="background-color: #F0F2F5;">
            <!-- Content will be rendered here by JavaScript -->
        </div>
    </div>

    <script>
        // Data model and configuration
        const appConfig = {
            "app_name": "LIC Jeevan Anand (715)",
            "brand": {
                "palette": {
                    "primary": "#003366", // A deep, professional navy blue
                    "secondary": "#FFA726", // A vibrant, energetic orange
                    "accent1": "#00BFA5", // A fresh, modern teal
                    "accent2": "#E91E63", // A bold magenta
                    "bgLight": "#F0F2F5", // A very light gray-blue for the card
                    "cardBg": "#ffffff", // Pure white for cards
                    "ink": "#212529", // A dark charcoal for text
                    "muted": "#6c757d" // A soft gray for secondary text
                }
            },
            "product": {
                "plan_name": "Jeevan Anand",
                "plan_code": "715",
                "tagline": "Zindagi ke saath bhi, Zindagi ke baad bhi",
            },
            "data_model": {
                "tiers": [
                    {
                        "id": "p1",
                        "label": "‚Çπ2,500",
                        "monthly": 2500,
                        "normalCoverText": "10 Lakh + Bonus",
                        "normalCoverMaxText": "16 Lakh with bonus",
                        "accidentalCoverText": "15 Lakh + Bonus",
                        "maturityText": "10 Lakh +",
                        "lifetimeCover": "‚Çπ5 Lakh",
                    },
                    {
                        "id": "p2",
                        "label": "‚Çπ5,000",
                        "monthly": 5000,
                        "normalCoverText": "20 Lakh + Bonus",
                        "normalCoverMaxText": "32 Lakh with bonus",
                        "accidentalCoverText": "30 Lakh + Bonus",
                        "maturityText": "20 Lakh +",
                        "lifetimeCover": "‚Çπ10 Lakh",
                    },
                    {
                        "id": "p3",
                        "label": "‚Çπ12,500",
                        "monthly": 12500,
                        "normalCoverText": "50 Lakh + Bonus",
                        "normalCoverMaxText": "82 Lakh with bonus",
                        "accidentalCoverText": "75 Lakh + Bonus",
                        "maturityText": "50 Lakh +",
                        "lifetimeCover": "‚Çπ25 Lakh",
                    }
                ]
            },
            "whatsapp_template": (premiumText) => `Hello, I would like to get a personalized calculation for the LIC Jeevan Anand plan. I'm interested in a plan with a monthly premium of ${premiumText}.`
        };

        // State management
        let screenIndex = 0;
        let selectedPremium = appConfig.data_model.tiers[1]; // Default to 5000
        let customPremiumInput = '';
        let isCustom = false;
        let appContainer = document.getElementById('app-container');

        // Helper functions
        const nextScreen = () => { screenIndex++; renderScreen(); };
        const backScreen = () => { screenIndex--; renderScreen(); };
        const goToScreen = (index) => { screenIndex = index; renderScreen(); };
        const goToSummary = () => { screenIndex = 5; renderScreen(); };

        const getWhatsAppUrl = () => {
            const premiumToShare = isCustom ? `‚Çπ${customPremiumInput}` : (selectedPremium ? selectedPremium.label : 'not specified');
            const message = encodeURIComponent(appConfig.whatsapp_template(premiumToShare));
            return `https://wa.me/91XXXXXXXXXX?text=${message}`;
        };

        // Dynamic HTML generation for emojis
        const getIcon = (iconName, size) => {
            const icons = {
                // Main screen icons
                MoneyIcon: 'üí∞',
                ShieldCheckIcon: 'üõ°Ô∏è',
                ArrowRightIcon: '‚û°Ô∏è',
                // During term screen icons
                HeartPulseIcon: '‚ù§Ô∏è‚Äçü©π', // Use a mending heart to represent health
                ShieldOffIcon: 'üí•', // Use a collision emoji for accidental death
                // After maturity screen icon
                SunIcon: '‚òÄÔ∏è',
                // General purpose icons
                ChevronLeftIcon: 'üîô',
                CheckCircleIcon: '‚úÖ',
                WhatsappIcon: 'üí¨'
            };
            
            return `<span class="${size}">${icons[iconName]}</span>`;
        };

        const renderScreen = () => {
            let htmlContent = '';
            const commonButtonClass = `w-full px-6 py-3 rounded-full font-bold transition-all duration-300 soft-shadow hover:scale-105`;
            const backButtonHtml = `<button id="back-button" class="absolute top-4 left-4 flex items-center text-ink/70 hover:text-ink transition-colors duration-200">
                                        ${getIcon('ChevronLeftIcon', 'h-5 w-5 mr-1')} Back
                                    </button>`;

            const renderTimeline = () => {
                const timelineItems = [
                    { id: 2, label: 'During Term' },
                    { id: 3, label: 'Maturity @ 50' },
                    { id: 4, label: 'After Maturity' },
                ];
                
                return `
                    <div class="w-full mb-8">
                        <p class="text-sm font-semibold mb-2" style="color: ${appConfig.brand.palette.primary};">
                            Selected: <span style="color: ${appConfig.brand.palette.accent1};">${selectedPremium.label}</span>
                            <button id="change-premium-btn" class="text-primary text-sm font-semibold ml-2 underline" style="color: ${appConfig.brand.palette.primary};">Change</button>
                        </p>
                        <div class="relative flex justify-between items-stretch bg-white rounded-full p-1 shadow-inner">
                            ${timelineItems.map(item => `
                                <button id="timeline-btn-${item.id}"
                                    class="flex-1 flex justify-center items-center py-2 px-2 rounded-full text-sm font-bold transition-all duration-300
                                        ${screenIndex === item.id ? 'bg-accent1 text-cardBg' : 'bg-cardBg text-ink border-2 border-primary'}"
                                    style="border-color: ${appConfig.brand.palette.primary}; background-color: ${screenIndex === item.id ? appConfig.brand.palette.accent1 : appConfig.brand.palette.cardBg}; color: ${screenIndex === item.id ? appConfig.brand.palette.cardBg : appConfig.brand.palette.ink};">
                                    ${item.label}
                                </button>
                            `).join('')}
                        </div>
                    </div>
                `;
            };

            switch (screenIndex) {
                case 0:
                    htmlContent = `
                        <div class="flex flex-col items-center justify-center text-center p-8">
                            <h1 class="text-4xl md:text-5xl font-bold mb-2" style="color: ${appConfig.brand.palette.primary};">
                                ${appConfig.product.plan_name}
                            </h1>
                            <h2 class="text-xl md:text-2xl font-bold mb-10" style="color: ${appConfig.brand.palette.primary};">
                                (Plan ${appConfig.product.plan_code})
                            </h2>
                            <p class="text-xl italic font-semibold mb-8" style="color: ${appConfig.brand.palette.accent1};">
                                Zindagi ke saath bhi,
                                <br/>
                                Zindagi ke baad bhi
                            </p>
                            <div class="flex items-center justify-center space-x-4 mb-8">
                                <div class="flex flex-col items-center">
                                    ${getIcon('MoneyIcon', 'text-4xl md:text-5xl')}
                                    <p class="text-sm font-semibold mt-2" style="color: ${appConfig.brand.palette.primary};">Maturity Benefit</p>
                                </div>
                                ${getIcon('ArrowRightIcon', 'text-2xl animate-pulse')}
                                <div class="flex flex-col items-center">
                                    ${getIcon('ShieldCheckIcon', 'text-4xl md:text-5xl')}
                                    <p class="text-sm font-semibold mt-2" style="color: ${appConfig.brand.palette.primary};">Lifelong Cover</p>
                                </div>
                            </div>
                            <p class="text-sm text-center mb-12" style="color: ${appConfig.brand.palette.ink};">
                                This plan uniquely offers <strong>significant returns</strong> at maturity while <strong>continuing to provide lifelong protection</strong>.
                            </p>
                            <button id="start-journey-btn" class="${commonButtonClass}"
                                style="background-color: ${appConfig.brand.palette.primary}; color: ${appConfig.brand.palette.cardBg};">
                                Start Your Journey
                            </button>
                        </div>
                    `;
                    break;

                case 1:
                    htmlContent = `
                        <div class="flex flex-col items-center justify-center text-center p-8">
                            ${backButtonHtml}
                            <h2 class="text-2xl md:text-3xl font-bold mb-8" style="color: ${appConfig.brand.palette.primary};">
                                Select your Monthly Premium
                            </h2>
                            <div class="flex flex-col md:flex-row justify-center items-center space-y-4 md:space-y-0 md:space-x-4 w-full">
                                ${appConfig.data_model.tiers.map(tier => `
                                    <button id="premium-btn-${tier.id}" class="w-full md:w-1/3 p-6 rounded-2xl bg-white/50 backdrop-blur-lg soft-shadow flex flex-col items-center justify-center transition-all duration-300 hover:scale-105"
                                        style="background-color: ${appConfig.brand.palette.bgLight}; color: ${appConfig.brand.palette.primary};">
                                        <div class="font-bold text-2xl" style="color: ${appConfig.brand.palette.secondary};">${tier.label}</div>
                                        <div class="text-sm" style="color: ${appConfig.brand.palette.ink};">/ month</div>
                                    </button>
                                `).join('')}
                            </div>
                        </div>
                    `;
                    break;

                case 2:
                    htmlContent = `
                        <div class="flex flex-col items-center justify-center text-center p-8">
                            ${backButtonHtml}
                            ${renderTimeline()}
                            <h2 class="text-2xl md:text-3xl font-bold mb-4" style="color: ${appConfig.brand.palette.primary};">
                                Your Death Cover
                            </h2>
                            <div class="bg-white/50 backdrop-blur-lg rounded-2xl p-6 mb-6 soft-shadow w-full" style="background-color: ${appConfig.brand.palette.bgLight};">
                                <h3 class="text-xl font-bold mb-2" style="color: ${appConfig.brand.palette.primary};">Natural Death Cover</h3>
                                <div class="flex items-center justify-center space-x-2 mb-2">
                                    ${getIcon('HeartPulseIcon', 'text-4xl')}
                                    <p class="text-5xl font-extrabold" style="color: ${appConfig.brand.palette.secondary};">
                                        ‚Çπ${selectedPremium.normalCoverText}
                                    </p>
                                </div>
                            </div>
                            <div class="bg-white/50 backdrop-blur-lg rounded-2xl p-6 soft-shadow w-full" style="background-color: ${appConfig.brand.palette.bgLight};">
                                <h3 class="text-xl font-bold mb-2" style="color: ${appConfig.brand.palette.primary};">Accidental Death Cover</h3>
                                <div class="flex items-center justify-center space-x-2 mb-2">
                                    ${getIcon('ShieldOffIcon', 'text-4xl')}
                                    <p class="text-5xl font-extrabold" style="color: ${appConfig.brand.palette.accent2};">
                                        ‚Çπ${selectedPremium.accidentalCoverText}
                                    </p>
                                </div>
                            </div>
                            <p class="text-xs text-red-500 italic mt-4">
                                Note: The "Bonus" and "with bonus" figures are for reference and are not guaranteed.
                            </p>
                            <button id="next-btn" class="mt-8 ${commonButtonClass}"
                                style="background-color: ${appConfig.brand.palette.primary}; color: ${appConfig.brand.palette.cardBg};">
                                Next
                            </button>
                        </div>
                    `;
                    break;

                case 3:
                    htmlContent = `
                        <div class="flex flex-col items-center justify-center text-center p-8">
                            ${backButtonHtml}
                            ${renderTimeline()}
                            <h2 class="text-2xl md:text-3xl font-bold mb-4" style="color: ${appConfig.brand.palette.primary};">
                                Your Maturity at Age 50
                            </h2>
                            <div class="bg-white/50 backdrop-blur-lg rounded-2xl p-8 mb-6 soft-shadow w-full flex flex-col items-center" style="background-color: ${appConfig.brand.palette.bgLight};">
                                ${getIcon('MoneyIcon', 'text-6xl md:text-7xl')}
                                <p class="text-5xl font-extrabold" style="color: ${appConfig.brand.palette.secondary};">
                                    ‚Çπ${selectedPremium.maturityText}
                                </p>
                                <p class="text-sm italic mt-2" style="color: ${appConfig.brand.palette.ink};">*Calculation for your reference.</p>
                            </div>
                             <p class="text-xs text-red-500 italic mt-4">
                                Note: Bonuses shown are for reference and are not guaranteed. The actual amount will depend on the corporation's performance.
                            </p>
                            <button id="next-btn" class="mt-8 ${commonButtonClass}"
                                style="background-color: ${appConfig.brand.palette.primary}; color: ${appConfig.brand.palette.cardBg};">
                                Next
                            </button>
                        </div>
                    `;
                    break;

                case 4:
                    htmlContent = `
                        <div class="flex flex-col items-center justify-center text-center p-8">
                            ${backButtonHtml}
                            ${renderTimeline()}
                            <h2 class="text-2xl md:text-3xl font-bold mb-4" style="color: ${appConfig.brand.palette.primary};">
                                After Maturity
                            </h2>
                            <div class="bg-white/50 backdrop-blur-lg rounded-2xl p-8 mb-6 soft-shadow w-full flex flex-col items-center" style="background-color: ${appConfig.brand.palette.bgLight};">
                                ${getIcon('SunIcon', 'text-6xl md:text-7xl')}
                                <p class="text-5xl font-extrabold" style="color: ${appConfig.brand.palette.accent1};">${selectedPremium.lifetimeCover}</p>
                                <p class="text-sm italic mt-2" style="color: ${appConfig.brand.palette.ink};">*Basic Sum Assured continues for life</p>
                            </div>
                            <button id="next-btn" class="mt-8 ${commonButtonClass}"
                                style="background-color: ${appConfig.brand.palette.primary}; color: ${appConfig.brand.palette.cardBg};">
                                Next
                            </button>
                        </div>
                    `;
                    break;

                case 5:
                    const premiumToShow = isCustom ? customPremiumInput : (selectedPremium?.monthly || 0);
                    const selectedPremiumLabel = isCustom ? `‚Çπ${customPremiumInput}` : (selectedPremium?.label || '');
                    
                    htmlContent = `
                        <div class="flex flex-col items-center justify-center p-8 text-center">
                            ${backButtonHtml}
                            ${getIcon('CheckCircleIcon', 'text-4xl md:text-5xl mb-4')}
                            <p class="text-sm font-bold mb-2" style="color: ${appConfig.brand.palette.primary};">You're almost done!</p>
                            <h2 class="text-2xl md:text-3xl font-bold mb-8" style="color: ${appConfig.brand.palette.primary};">
                                Get My Personalized Calculation
                            </h2>
                            <p class="text-sm mb-6" style="color: ${appConfig.brand.palette.muted};">
                                Review your premium below or enter a custom amount, then open WhatsApp.
                            </p>
                            
                            <div class="w-full">
                                <h3 class="text-xl font-bold mb-4 text-left" style="color: ${appConfig.brand.palette.primary};">
                                    Review or change premium
                                </h3>
                                <div class="flex flex-col md:flex-row justify-center items-center space-y-4 md:space-y-0 md:space-x-4 w-full mb-6">
                                    ${appConfig.data_model.tiers.map(tier => `
                                        <button id="premium-select-btn-${tier.id}"
                                            class="w-full md:w-1/3 p-6 rounded-2xl bg-white soft-shadow flex flex-col items-center justify-center transition-all duration-300
                                                ${selectedPremium && selectedPremium.id === tier.id ? 'ring-2 ring-offset-2 ring-accent1' : ''}">
                                            <p class="text-sm" style="color: ${appConfig.brand.palette.muted};">Monthly Premium</p>
                                            <div class="font-bold text-xl" style="color: ${appConfig.brand.palette.primary};">${tier.label}</div>
                                            ${selectedPremium && selectedPremium.id === tier.id ? `<p class="text-xs mt-1" style="color: ${appConfig.brand.palette.accent1};">Selected</p>` : ''}
                                        </button>
                                    `).join('')}
                                </div>
                            </div>

                            <div class="w-full mb-6">
                                <p class="text-sm text-left mb-2" style="color: ${appConfig.brand.palette.ink};">
                                    Or enter a custom monthly premium
                                </p>
                                <div class="flex items-center space-x-2">
                                    <input
                                        type="number"
                                        id="custom-premium-input"
                                        value="${customPremiumInput}"
                                        placeholder="e.g., 3500"
                                        class="w-full px-4 py-3 rounded-xl border-2 text-xl font-bold focus:outline-none focus:border-accent1"
                                        style="border-color: ${appConfig.brand.palette.muted}; color: ${appConfig.brand.palette.ink};"
                                    />
                                    <button id="use-custom-btn"
                                        class="px-6 py-3 rounded-xl font-bold soft-shadow text-sm"
                                        style="background-color: ${appConfig.brand.palette.accent1}; color: ${appConfig.brand.palette.cardBg};">
                                        Use Custom
                                    </button>
                                </div>
                            </div>

                            <div class="w-full mb-6 p-4 rounded-xl soft-shadow" style="background-color: ${appConfig.brand.palette.bgLight};">
                                <h3 class="text-xl font-bold mb-4 text-left flex items-center space-x-2" style="color: ${appConfig.brand.palette.primary};">
                                    <span class="p-1 rounded-full flex items-center justify-center" style="background-color: ${appConfig.brand.palette.primary};">${getIcon('CheckCircleIcon', 'text-base')}</span>
                                    <span>Details for ${selectedPremiumLabel} / month</span>
                                </h3>
                                <div class="grid grid-cols-2 gap-4">
                                    <div class="p-3 rounded-lg text-sm text-center" style="background-color: ${appConfig.brand.palette.cardBg};">
                                        <div class="flex items-center justify-center space-x-2 mb-1">
                                            ${getIcon('HeartPulseIcon', 'text-base')}
                                            <p style="color: ${appConfig.brand.palette.muted};">During Term ‚Äî Natural</p>
                                        </div>
                                        <p class="font-bold" style="color: ${appConfig.brand.palette.primary};">${selectedPremium.normalCoverText}</p>
                                    </div>
                                    <div class="p-3 rounded-lg text-sm text-center" style="background-color: ${appConfig.brand.palette.cardBg};">
                                        <div class="flex items-center justify-center space-x-2 mb-1">
                                            ${getIcon('ShieldOffIcon', 'text-base')}
                                            <p style="color: ${appConfig.brand.palette.muted};">During Term ‚Äî Accidental</p>
                                        </div>
                                        <p class="font-bold" style="color: ${appConfig.brand.palette.primary};">${selectedPremium.accidentalCoverText}</p>
                                    </div>
                                    <div class="p-3 rounded-lg text-sm text-center" style="background-color: ${appConfig.brand.palette.cardBg};">
                                        <div class="flex items-center justify-center space-x-2 mb-1">
                                            ${getIcon('MoneyIcon', 'text-base')}
                                            <p style="color: ${appConfig.brand.palette.muted};">Maturity @ 50</p>
                                        </div>
                                        <p class="font-bold" style="color: ${appConfig.brand.palette.primary};">${selectedPremium.maturityText}</p>
                                    </div>
                                    <div class="p-3 rounded-lg text-sm text-center" style="background-color: ${appConfig.brand.palette.cardBg};">
                                        <div class="flex items-center justify-center space-x-2 mb-1">
                                            ${getIcon('SunIcon', 'text-base')}
                                            <p style="color: ${appConfig.brand.palette.muted};">Cover After Maturity</p>
                                        </div>
                                        <p class="font-bold" style="color: ${appConfig.brand.palette.primary};">${selectedPremium.lifetimeCover}</p>
                                    </div>
                                </div>
                            </div>
                            
                            <a href="${getWhatsAppUrl()}" target="_blank" rel="noopener noreferrer"
                                class="${commonButtonClass} flex items-center justify-center space-x-2"
                                style="background-color: ${appConfig.brand.palette.accent1}; color: ${appConfig.brand.palette.cardBg};">
                                <span>Open WhatsApp to Share</span>
                                ${getIcon('WhatsappIcon', 'text-xl')}
                            </a>
                        </div>
                    `;
                    break;
            }
            appContainer.innerHTML = htmlContent;
            attachEventListeners();
        };

        const handleCustomPremium = () => {
            const inputElement = document.getElementById('custom-premium-input');
            customPremiumInput = inputElement.value;
            if (customPremiumInput) {
                isCustom = true;
                const customPremium = {
                    id: 'custom',
                    label: `‚Çπ${customPremiumInput}`,
                    monthly: parseFloat(customPremiumInput),
                    normalCoverText: 'As per calculation',
                    accidentalCoverText: 'As per calculation',
                    maturityText: 'As per calculation',
                    lifetimeCover: 'As per calculation'
                };
                selectedPremium = customPremium;
            } else {
                isCustom = false;
            }
            goToSummary(); // Go to summary after setting custom premium
        };

        const attachEventListeners = () => {
            // Event listeners for screen 0
            const startBtn = document.getElementById('start-journey-btn');
            if (startBtn) {
                startBtn.addEventListener('click', nextScreen);
            }

            // Event listeners for screen 1
            appConfig.data_model.tiers.forEach(tier => {
                const btn = document.getElementById(`premium-btn-${tier.id}`);
                if (btn) {
                    btn.addEventListener('click', () => {
                        selectedPremium = tier;
                        isCustom = false;
                        nextScreen();
                    });
                }
            });

            // Event listeners for back buttons (on all screens except 0)
            const backBtn = document.getElementById('back-button');
            if (backBtn) {
                backBtn.addEventListener('click', backScreen);
            }
            
            // Event listener for "Change" button on timeline
            const changePremiumBtn = document.getElementById('change-premium-btn');
            if(changePremiumBtn){
                changePremiumBtn.addEventListener('click', () => goToScreen(1));
            }

            // Event listeners for next buttons (on screens 2, 3, 4)
            const nextBtn = document.getElementById('next-btn');
            if (nextBtn) {
                nextBtn.addEventListener('click', nextScreen);
            }

            // Event listeners for timeline buttons (on screens 2, 3, 4)
            for (let i = 2; i <= 4; i++) {
                const timelineBtn = document.getElementById(`timeline-btn-${i}`);
                if (timelineBtn) {
                    timelineBtn.addEventListener('click', () => goToScreen(i));
                }
            }
            
            // Event listeners for screen 5
            appConfig.data_model.tiers.forEach(tier => {
                const btn = document.getElementById(`premium-select-btn-${tier.id}`);
                if (btn) {
                    btn.addEventListener('click', () => {
                        selectedPremium = tier;
                        isCustom = false;
                        renderScreen();
                    });
                }
            });

            const useCustomBtn = document.getElementById('use-custom-btn');
            if (useCustomBtn) {
                useCustomBtn.addEventListener('click', handleCustomPremium);
            }
        };

        // Initial render on page load
        window.onload = renderScreen;
    </script>
</body>
</html>
